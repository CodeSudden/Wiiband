@page
@model Capstone.Pages.Admin.Admin_DashboardModel
@{
    ViewData["Title"] = "Dashboard";
    Layout = "_AdminLayout";
}

<!-- Outer Container for Background -->
<div class="outer-container bg-light rounded-4 p-5 mt-4 mx-auto">

    <!-- Announcement Section -->
    <div class="alert alert-info d-flex align-items-center shadow-sm p-3 rounded mb-4">
        <i class="bi bi-megaphone-fill me-3 text-primary" style="font-size: 2rem;"></i>
        <div>
            <strong>Announcement:</strong> The next system maintenance is scheduled for August 15, 2024. Please save your work in advance.
        </div>
    </div>
  
    <!-- Page Title -->
    <div class="row mb-4">
        <div class="col text-left">
            <h5 class="display-5 fw-bold text-dark">Dashboard - Fiesta Carnival</h5>
        </div>
    </div>

    <!-- Info Boxes -->
    <div class="row">
        <div class="col-md-3 mb-3">
            <div class="info-card shadow-hover">
                <i class="bi bi-calendar-check icon"></i>
                <div class="info-text">
                    <h5>@DateTime.Now.ToString("MMMM")</h5>
                    <p>@DateTime.Now.Year</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="info-card shadow-hover">
                <i class="bi bi-people-fill icon"></i>
                <div class="info-text">
                    <h5>@Model.TotalJumpers</h5>
                    <p>Visitors</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="info-card shadow-hover">
                <i class="bi bi-watch icon"></i>
                <div class="info-text">
                    <h5>9</h5>
                    <p>Active now</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="info-card shadow-hover">
                <i class="bi bi-cash-stack icon"></i>
                <div class="info-text">
                    <h5>@Model.TotalSalesToday.ToString("C")</h5>
                    <p>Total Sales</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="fw-bold text-muted">Transaction Overview</h3>
        <form method="post" class="d-inline-block">
            <select name="StatusFilter" class="form-select w-auto border-2 shadow-sm" onchange="this.form.submit()">
                <option value="">All</option>
                <option value="Online" selected="@((Model.StatusFilter == "Online") ? true : false)">Online</option>
                <option value="Offline" selected="@((Model.StatusFilter == "Offline") ? true : false)">Offline</option>
            </select>
        </form>
    </div>

    <!-- Transaction Table -->
    <div class="row">
        <div class="col-12">
            <div class="transaction-table bg-white shadow-sm rounded-3 p-3">
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle text-center">
                        <thead class="table-light">
                            <tr>
                                <th>Transaction Number</th>
                                <th>Wiiband ID</th>
                                <th>Customer Name</th>
                                <th>Email</th>
                                <th>Start Time</th>
                                <th>End Time</th>
                                <th>Remaining Time</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var transaction in Model.Transactions)
                            {
                                <tr>
                                    <td>@transaction.TransactionNumber</td>
                                    <td>@transaction.WiibandID</td>
                                    <td>@transaction.CustomerName</td>
                                    <td>@transaction.Email</td>
                                    <td>@transaction.StartTime?.ToString(@"hh\:mm")</td>
                                    <td>@transaction.EndTime?.ToString(@"hh\:mm")</td>
                                    <td>@transaction.RemainingTime</td>
                                    <td>
                                        <!-- Assuming deactivation is a link or button; otherwise, remove if not applicable -->
                                        <a href="#" class="btn btn-danger btn-sm">Deactivate</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- SignalR and Scripts -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    // Establish a connection to the SignalR hub
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/StaffDashboardHub")
        .build();

    // Function to handle incoming registration updates
    connection.on("ReceiveRegistrationUpdate", function (data) {
        const tableBody = document.querySelector("#transactionTable tbody");

        // Create a new row for the transaction
        const row = document.createElement("tr");

        // Populate the new row with transaction details
        row.innerHTML = `
            <td>${data.TransactionNumber}</td>
            <td>${data.Wiiband || 'N/A'}</td>
            <td>${data.StartTime || 'N/A'}</td>
            <td>${data.EndTime || 'N/A'}</td>
            <td>${data.RemainingTime || 'N/A'}</td>
            <td>
                <span class="badge ${data.Status === 'Active' ? 'bg-success' : data.Status === 'Inactive' ? 'bg-danger' : 'bg-secondary'}">
                    ${data.Status}
                </span>
            </td>
            <td>${data.Battery || 'N/A'}</td>
        `;

        // Append the new row to the table body
        tableBody.appendChild(row);
    });

    // Start the SignalR connection
    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
    const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    const d = new Date();
    let month = months[d.getMonth()];
    let day = d.getDate();
    let year = d.getFullYear();
    document.getElementById("month").innerHTML = month + " " +  day;
    document.getElementById("year").innerHTML = year;
</script>

<!-- Enhanced Minimalist CSS Style -->
<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, sans-serif;
        background-color: #f8f9fa;
    }

    /* Outer container for background */
    .outer-container {
        max-width: 1440px; /* Increased container width */
        background-color: #ffffff;
        padding: 50px;
        border-radius: 15px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
    }

    /* Icon Styles */
    .icon {
        font-size: 3rem;
    }

    /* Info Card Styling */
    .info-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        border-radius: 15px;
        transition: all 0.3s ease;
    }

    .info-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
    }

    /* Table and Button Styles */
    table {
        width: 100%;
    }

    th, td {
        padding: 12px;
    }

    th {
        background-color: #f8f9fa;
        color: #333;
    }

    td {
        color: #333;
    }

    tr:hover {
        background-color: #f1f1f1;
    }

    /* Badge Styles */
    .badge {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        border-radius: 15px;
        font-weight: 600;
    }

    /* Button Hover Effect */
    .btn:hover {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        transform: translateY(-2px);
    }

    .btn-outline-danger {
        border-color: #dc3545;
        color: #dc3545;
    }

    .btn-outline-danger:hover {
        background-color: #dc3545;
        color: white;
    }

    /* Responsive Styles */
    @@media (max-width: 768px) {
        .info-card {
            text-align: center;
        }
    }
</style>

